{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { DefaultFilter } from './default-filter';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.resetFilter($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n  }\n}\n\nexport let CheckboxFilterComponent = /*#__PURE__*/(() => {\n  class CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n      super();\n      this.filterActive = false;\n      this.inputControl = new FormControl();\n    }\n\n    ngOnInit() {\n      this.changesSubscription = this.inputControl.valueChanges.pipe(debounceTime(this.delay)).subscribe(checked => {\n        this.filterActive = true;\n        const trueVal = this.column.getFilterConfig() && this.column.getFilterConfig().true || true;\n        const falseVal = this.column.getFilterConfig() && this.column.getFilterConfig().false || false;\n        this.query = checked ? trueVal : falseVal;\n        this.setFilter();\n      });\n    }\n\n    resetFilter(event) {\n      event.preventDefault();\n      this.query = '';\n      this.inputControl.setValue(false, {\n        emitEvent: false\n      });\n      this.filterActive = false;\n      this.setFilter();\n    }\n\n  }\n\n  CheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) {\n    return new (t || CheckboxFilterComponent)();\n  };\n\n  CheckboxFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckboxFilterComponent,\n    selectors: [[\"checkbox-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]],\n    template: function CheckboxFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n      }\n    },\n    directives: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgClass, i2.NgIf],\n    encapsulation: 2\n  });\n  return CheckboxFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}