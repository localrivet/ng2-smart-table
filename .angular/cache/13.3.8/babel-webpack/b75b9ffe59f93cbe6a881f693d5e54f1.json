{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Grid } from '../../lib/grid';\nimport { Cell } from '../../lib/data-set/cell';\nimport { Row } from '../../lib/data-set/row';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./cell-view-mode/view-cell.component\";\nimport * as i3 from \"./cell-edit-mode/edit-cell.component\";\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nexport let CellComponent = /*#__PURE__*/(() => {\n  class CellComponent {\n    constructor() {\n      this.inputClass = '';\n      this.mode = 'inline';\n      this.isInEditing = false;\n      this.edited = new EventEmitter();\n    }\n\n    onEdited(event) {\n      if (this.isNew) {\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n      } else {\n        this.grid.save(this.row, this.editConfirm);\n      }\n    }\n\n  }\n\n  CellComponent.ɵfac = function CellComponent_Factory(t) {\n    return new (t || CellComponent)();\n  };\n\n  CellComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CellComponent,\n    selectors: [[\"ng2-smart-table-cell\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      editConfirm: \"editConfirm\",\n      createConfirm: \"createConfirm\",\n      isNew: \"isNew\",\n      cell: \"cell\",\n      inputClass: \"inputClass\",\n      mode: \"mode\",\n      isInEditing: \"isInEditing\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n    template: function CellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n        i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n      }\n    },\n    directives: [i1.NgIf, i2.ViewCellComponent, i3.EditCellComponent],\n    encapsulation: 2\n  });\n  return CellComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}