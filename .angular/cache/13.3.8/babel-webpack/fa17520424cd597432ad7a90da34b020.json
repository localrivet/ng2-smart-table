{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { CompleterService } from 'ng2-completer';\nimport { DefaultFilter } from './default-filter';\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-completer\";\nimport * as i2 from \"@angular/forms\";\nexport let CompleterFilterComponent = /*#__PURE__*/(() => {\n  class CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n      super();\n      this.completerService = completerService;\n      this.completerContent = new Subject();\n    }\n\n    ngOnInit() {\n      const config = this.column.getFilterConfig().completer;\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n      config.dataService.descriptionField(config.descriptionField);\n      this.changesSubscription = this.completerContent.pipe(map(ev => ev && ev.title || ev || ''), distinctUntilChanged(), debounceTime(this.delay)).subscribe(search => {\n        this.query = search;\n        this.setFilter();\n      });\n    }\n\n    inputTextChanged(event) {\n      // workaround to trigger the search event when the home/end buttons are clicked\n      // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n      // so here it gets called manually\n      if (event === '') {\n        this.completerContent.next(event);\n      }\n    }\n\n  }\n\n  CompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) {\n    return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1.CompleterService));\n  };\n\n  CompleterFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CompleterFilterComponent,\n    selectors: [[\"completer-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n    template: function CompleterFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n          return ctx.query = $event;\n        })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n          return ctx.inputTextChanged($event);\n        })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) {\n          return ctx.completerContent.next($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n      }\n    },\n    directives: [i1.CompleterCmp, i2.NgControlStatus, i2.NgModel],\n    encapsulation: 2\n  });\n  return CompleterFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}